/* use for temporary css reset */
*{
    margin:0;
    padding:0;
    /* allows your height and width properties to size more reliably;
    default box-sizing means that anytime that you adjust padding margin
    or any other element it increases the entire element this allows you 
    to only increase the border allowing for more reliable sizing; */
    box-sizing: border-box; 
}
body{
    min-height: 200vh;  /* this allows us to use the scroll bar in  */
    padding-top:12vh; /* this allows for the the header element witch is fixed to not cover up any of the other elements*/
}

header{
    width:100vw;
    height: 12vh; 
    background-color: rgb(16, 17, 19);
    position: fixed;/* this gives it a fixed position relative to the viewport */
    top: 0px; /* this give tell the position form the top that you would like the element to remain fixed*/
    z-index: 1; /*this is use to determine what layer you would like the element to be on.*/
}

.logo{
    height:100%;/* if you want to us percentages the parent element must have a defined height or width */
    position: relative; /* positions the elements relative to where they would normally be placed */
    left:50px; /* moves the element 50px relative from the original location */
}
/*a hero image is something that catches the eye of the of the viewer when they first access the page*/
.hero-image{
    background-image: url('https://www.xfive.co/wp-content/uploads/2016/02/itcss2.jpg');
    width:100vw;
    height: 70vh;
    background-position: center;
    position: relative; /* if this is not declared the position will go be directed to the view port*/
}
.hero-description{
    background-color: rgba(226, 219, 219, 0.801);
    width: 100%;
    height:10%;
    position: absolute; /* Used to set position relative to it nearest relative element. When declaring absolute the element looks up the family tree to position of the parent to decide the position */
    bottom: 0px; /* this is say Zero pixels from the bottom of the parent element*/
}
.covid-description{
    width: 100%;
    height: 9%;
    background-color: orange;
    color:white;
    text-align: center;
    position:sticky; /* This will cause the element to react normally until a certain criteria is met. Once met the element with then stick on the screen */
    top:12vh; /* This is the criteria. once the scroll bar hits 12vh it will stick  */

}
.best-products{
    width: 100%;
    height: 40vh;
    background-color: burlywood;
    display: flex;
    justify-content: space-around; /* affects the Primary axis*/
    align-items: center;  /* affects the Cross axis*/
    text-align: center;
}
.other-products{
    width: 100%;
    height:40vh;
    background-color: rgb(138, 127, 98);
    display: flex;
    flex-wrap: wrap; /* this will tell the elements to push the element to next row if they do not fit*/
    overflow: auto; /*this will tells the container to contain the elements inside with a scroll bar*/
    justify-content: space-evenly;
    padding: 30px;
}
.product{
    width: 150px;
    height: 150px;
    background-color: brown;
    border: 1px solid black;
    margin:5px;
    display: flex; /* flex only affect the direct children of the element so you must us it here to center the text using flex.*/ 
    /* justify-content: center dose not center it on the primary axis because the text takes up the width of the parent element */ 
    align-items: center;
    text-align: center;


}
.over-flow{
    background-color: blanchedalmond;
    font-size: 40px;
    width: 100%;
    height: 40vh;
    overflow: auto;
}
.add-image{
    width: 20vw;
    position: fixed;
    bottom:10%;
    right: 10px;
}
.flex-shadow{
    display: flex;
    justify-content: center;
    padding:15px;
}
.shadow-example{
    background-color: blue;
    border: 1px solid black;
    width: 150px;
    height: 150px;
    box-shadow: 9px 9px 0px 0px black;
}